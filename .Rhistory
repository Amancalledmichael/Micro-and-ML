rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
View(carseats)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(12, NA))))
# View(carseats)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
carseats$HighSales <- as.factor(ifelse(carseats$Sales > 8, 1, 0))
# table(carseats$Sales, carseats$HighSales)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
View(carseats)
carseats$Urban <- as.factor(carseats$Urban)
carseats$Urban <- as.factor(carseats$Urban)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- as.factor(carseats$ShelveLoc)
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- as.factor(carseats$ShelveLoc, ordered = T, levels = c("Bad", "Medium", "Good"))
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = T, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- ordered(carseats$ShelveLoc, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- ordered(carseats$ShelveLoc, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
carseats$HighSales <- as.factor(ifelse(carseats$Sales > 8, 1, 0))
# table(carseats$Sales, carseats$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = T, levels = c("Bad", "Medium", "Good"))
carseats$ShelveLoc
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = T, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
plot.tree(seat_tree)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
carseats$HighSales <- as.factor(ifelse(carseats$Sales > 8, 1, 0))
# table(carseats$Sales, carseats$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = T, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
carseats$HighSales <- as.factor(ifelse(carseats$Sales > 8, "Low", "High"))
# table(carseats$Sales, carseats$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = T, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
dim(carseats)
set.seed(2)
seat_idx = sample(1:nrow(carseats), 200)
seat_trn = carseats[seat_idx,]
seat_tst = carseats[-seat_idx,]
seat_tree = tree(HighSales ~ . - Sales ., data = seat_trn, minsize = 12)
seat_tree = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
seat_trn_pred = predict(seat_tree, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree, seat_tst, type = "class")
seat_trn_pred
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$Sales)
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$HighSales)
# test confusion
table(predicted = seat_tst_pred, actual = seat_tst$HighSales)
accuracy = function(actual, predicted) {
mean(actual == predicted)
}
# train acc
accuracy(predicted = seat_trn_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_trn_pred, actual = seat_tst$HighSales)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree_trn, seat_tst, type = "class")
summary(seat_tree_trn)
summary(seat_tree)
str(carseats)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = F, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = F, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 10)
summary(seat_tree)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = F, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
carseats$HighSales <- as.factor(ifelse(carseats$Sales > 8, "Low", "High"))
# table(carseats$Sales, carseats$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = F, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
dim(carseats)
set.seed(2)
seat_idx = sample(1:nrow(carseats), 200)
seat_trn = carseats[seat_idx,]
seat_tst = carseats[-seat_idx,]
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
summary(seat_tree_trn)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree_trn, seat_tst, type = "class")
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$HighSales)
# test confusion
table(predicted = seat_tst_pred, actual = seat_tst$HighSales)
accuracy = function(actual, predicted) {
mean(actual == predicted)
}
# train acc
accuracy(predicted = seat_trn_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_trn_pred, actual = seat_tst$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc, ordered = F, levels = c("Bad", "Medium", "Good"))
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 10)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
dim(carseats)
set.seed(2)
seat_idx = sample(1:nrow(carseats), 200)
seat_trn = carseats[seat_idx,]
seat_tst = carseats[-seat_idx,]
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
summary(seat_tree_trn)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree_trn, seat_tst, type = "class")
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$HighSales)
# test confusion
table(predicted = seat_tst_pred, actual = seat_tst$HighSales)
accuracy = function(actual, predicted) {
mean(actual == predicted)
}
# train acc
accuracy(predicted = seat_trn_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_trn_pred, actual = seat_tst$HighSales)
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
plot(seat_tree_trn)
text(seat_tree_trn, pretty = 0)
title(main = "Unpruned Classification Tree (Training)")
summary(seat_tree_trn)
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 10)
plot(seat_tree_trn)
text(seat_tree_trn, pretty = 0)
title(main = "Unpruned Classification Tree (Training)")
summary(seat_tree_trn)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree_trn, seat_tst, type = "class")
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$HighSales)
# test confusion
table(predicted = seat_tst_pred, actual = seat_tst$HighSales)
accuracy = function(actual, predicted) {
mean(actual == predicted)
}
# train acc
accuracy(predicted = seat_trn_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_trn_pred, actual = seat_tst$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc)
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
dim(carseats)
set.seed(2)
seat_idx = sample(1:nrow(carseats), 200)
seat_trn = carseats[seat_idx,]
seat_tst = carseats[-seat_idx,]
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
plot(seat_tree_trn)
text(seat_tree_trn, pretty = 0)
title(main = "Unpruned Classification Tree (Training)")
summary(seat_tree_trn)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree_trn, seat_tst, type = "class")
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$HighSales)
# test confusion
table(predicted = seat_tst_pred, actual = seat_tst$HighSales)
accuracy = function(actual, predicted) {
mean(actual == predicted)
}
# train acc
accuracy(predicted = seat_trn_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_trn_pred, actual = seat_tst$HighSales)
seat_tree_cv = cv.tree(seat_tree, FUN = prune.misclass)
min_idx = which.min(seat_tree_cv$dev)
seat_tree_cv$size[min_idx]
seat_tree_cv$size[9]
seat_tree_cv$size[14]
seat_tree_cv = cv.tree(seat_tree_trn, FUN = prune.misclass)
View(seat_tree_cv)
prune.misclass(seat_tree_trn)
prune.misclass(seat_tree_trn, k = 9)
test <- prune.misclass(seat_tree_trn, k = 9)
View(test)
plot(test)
text(test)
test <- prune.misclass(seat_tree_trn, best = 9)
plot(test)
text(test)
seat_tree_cv = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
min_idx = which.min(seat_tree_cv$dev)
seat_tree_cv$size[min_idx]
View(seat_tree_cv)
plot(seat_tree_cv)
text(seat_tree_cv)
seat_tree_cv = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14)
plot(seat_tree_cv)
text(seat_tree_cv)
# 9 nodes
seat_tree_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
plot(seat_tree_cv_9)
text(seat_tree_cv_9)
plot(seat_tree_cv_9)
text(seat_tree_cv_9)
rm(list = ls())
# install.packages("tree")
library(tree)
# install.packages("ISLR")
library(ISLR)
carseats <- read.csv(file = 'carseats.csv', colClasses = (c("NULL", replicate(11, NA))))
# View(carseats)
carseats$HighSales <- as.factor(ifelse(carseats$Sales > 8, "Low", "High"))
# table(carseats$Sales, carseats$HighSales)
carseats$Urban <- as.factor(carseats$Urban)
carseats$ShelveLoc <- factor(carseats$ShelveLoc)
carseats$US <- as.factor(carseats$US)
seat_tree = tree(HighSales ~ . - Sales, data = carseats, minsize = 12)
plot(seat_tree)
text(seat_tree, pretty = 0)
title(main = "Unpruned Classification Tree")
summary(seat_tree)
dim(carseats)
set.seed(2)
seat_idx = sample(1:nrow(carseats), 200)
seat_trn = carseats[seat_idx,]
seat_tst = carseats[-seat_idx,]
seat_tree_trn = tree(HighSales ~ . - Sales, data = seat_trn, minsize = 12)
plot(seat_tree_trn)
text(seat_tree_trn, pretty = 0)
title(main = "Unpruned Classification Tree (Training)")
summary(seat_tree_trn)
seat_trn_pred = predict(seat_tree_trn, seat_trn, type = "class")
seat_tst_pred = predict(seat_tree_trn, seat_tst, type = "class")
# train confusion
table(predicted = seat_trn_pred, actual = seat_trn$HighSales)
# test confusion
table(predicted = seat_tst_pred, actual = seat_tst$HighSales)
accuracy = function(actual, predicted) {
mean(actual == predicted)
}
# train acc
accuracy(predicted = seat_trn_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_trn_pred, actual = seat_tst$HighSales)
# 9 nodes
seat_tree_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
plot(seat_tree_cv_9)
text(seat_tree_cv_9)
# 14 nodes
seat_tree_cv_14 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14)
plot(seat_tree_cv_14)
text(seat_tree_cv_14)
summary(seat_tree_cv_14)
seat_tree_cv_14$dev
View(seat_tree_cv_14)
# 9 nodes
seat_trn_cv_9 = cv.trn(seat_trn_trn, FUN = prune.misclass, best = 9)
plot(seat_trn_cv_9)
# 9 nodes
seat_trn_cv_9 = cv.trn(seat_tree_trn, FUN = prune.misclass, best = 9)
# 9 nodes
seat_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
plot(seat_trn_cv_9)
text(seat_trn_cv_9)
# 14 nodes
seat_trn_cv_14 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14)
plot(seat_trn_cv_14)
seat_trn_cv_9_pred <- predict(seat_tree_trn_cv_9, seat_tst)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
plot(seat_tree_trn_cv_9)
text(seat_tree_trn_cv_9)
seat_trn_cv_9_pred <- predict(seat_tree_trn_cv_9, seat_tst)
seat_trn_cv_9_pred <- predict(seat_tree_trn_cv_9, seat_tst, type = "class")
seat_trn_cv_9_pred <- predict(seat_tree_trn_cv_9, seat_trn, type = "class")
seat_tst_cv_9_pred <- predict(seat_tree_trn_cv_9, seat_tst, type = "class")
#test acc
accuracy(predicted = seat_tst_pred, actual = seat_tst$HighSales)
# train acc
accuracy(predicted = seat_trn_cv_9_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_cv9_pred, actual = seat_tst$HighSales)
seat_tst_cv_9_pred <- predict(seat_tree_trn_cv_9, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_cv_9_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_cv9_pred, actual = seat_tst$HighSales)
#test acc
accuracy(predicted = seat_tst_cv_9_pred, actual = seat_tst$HighSales)
# 14 nodes
seat_tree_trn_cv_14 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14)
plot(seat_tree_trn_cv_14)
text(seat_tree_trn_cv_14)
seat_trn_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_trn, type = "class")
seat_tst_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_cv_14_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_cv_14_pred, actual = seat_tst$HighSales)
seat_tree_trn_14 = tree(seat_tree_trn, minsize = 12, nmax = 14)
seat_tree_trn_14 <- prune.misclass(seat_tree_trn, best = 9)
# train acc
accuracy(predicted = seat_trn_cv_pred, actual = seat_trn$HighSales)
# train acc
accuracy(predicted = seat_trn_14_pred, actual = seat_trn$HighSales)
seat_tree_trn_14 <- prune.misclass(seat_tree_trn, best = 9)
seat_trn_14_pred <- predict(seat_tree_trn_14, seat_trn, type = "class")
seat_tst_14_pred <- predict(seat_tree_trn_14, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_14_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_14_pred, actual = seat_tst$HighSales)
# 14 nodes
seat_tree_trn_cv_14 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14, K = 1000)
seat_trn_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_trn, type = "class")
seat_tst_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_cv_14_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_cv_14_pred, actual = seat_tst$HighSales)
# 14 nodes
seat_tree_trn_cv_14 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14, K = 10)
plot(seat_tree_trn_cv_14)
text(seat_tree_trn_cv_14)
seat_trn_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_trn, type = "class")
seat_tst_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_cv_14_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_cv_14_pred, actual = seat_tst$HighSales)
seat_tree_trn_14 <- prune.misclass(seat_tree_trn, best = 9)
seat_trn_14_pred <- predict(seat_tree_trn_14, seat_trn, type = "class")
seat_tree_trn_14 <- prune.misclass(seat_tree_trn, best = 14)
seat_trn_14_pred <- predict(seat_tree_trn_14, seat_trn, type = "class")
seat_tst_14_pred <- predict(seat_tree_trn_14, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_14_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_14_pred, actual = seat_tst$HighSales)
View(seat_trn_cv_14)
seat_tree_cv_9$dev
View(seat_trn_cv_9)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass)
seat_tree_cv_9$dev
seat_tree_trn_cv_9$dev
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
plot(seat_tree_trn_cv_9)
text(seat_tree_trn_cv_9)
seat_tree_trn_cv_9$dev
seat_tree_cv_9$dev
view(prune.misclass())
View(prune.misclass())
prune.misclass()
view(prune.tree())
View(prune.tree())
method(prune.tree())
methods(prune.misclass())
View(prune.misclass)
View(prune.tree)
View(cv.tree)
sample(10, length(model.frame(seat_tree)), replace = T)
# 14 nodes
seat_tree_trn_cv_14 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 14, K = 1000)
plot(seat_tree_trn_cv_14)
text(seat_tree_trn_cv_14)
seat_trn_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_trn, type = "class")
seat_tst_cv_14_pred <- predict(seat_tree_trn_cv_14, seat_tst, type = "class")
# train acc
accuracy(predicted = seat_trn_cv_14_pred, actual = seat_trn$HighSales)
#test acc
accuracy(predicted = seat_tst_cv_14_pred, actual = seat_tst$HighSales)
seat_tree_cv_14
summary(seat_tree_cv_9)
plot(seat_tree_cv_9)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, K = 1)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass)
plot(seat_tree_trn_cv_9)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass)
plot(seat_tree_trn_cv_9)
View(seat_trn_cv_9)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, best = 9)
plot(seat_tree_trn_cv_9)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass)
plot(seat_tree_trn_cv_9)
# 9 nodes
seat_tree_trn_cv_9 = cv.tree(seat_tree_trn, FUN = prune.misclass, K = 1000)
plot(seat_tree_trn_cv_9)
prune.misclass(seat_tree)
